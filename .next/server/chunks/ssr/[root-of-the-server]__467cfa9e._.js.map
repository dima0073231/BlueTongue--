{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PIV/Desktop/Scripts/SomeWebApp/BlueTongue--/components/Footer.tsx"],"sourcesContent":["\"use client\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\n\r\nconst items = [\r\n  { href: \"/profile\", label: \"Profile\", icon: \"/apple-icon.svg\" },\r\n  { href: \"/library\", label: \"Library\", icon: \"/email-icon.svg\" },\r\n  { href: \"/tutor\", label: \"Tutor\", icon: \"/google-icon.svg\" },\r\n  { href: \"/resume\", label: \"Resume\", icon: \"/apple-icon.svg\" },\r\n];\r\n\r\nexport default function BottomNav() {\r\n  const path = usePathname();\r\n  return (\r\n    <nav className=\"fixed bottom-0 inset-x-0 bg-brand-600 text-white\">\r\n      <div className=\"mx-auto max-w-md grid grid-cols-4 gap-2 px-6 py-3\">\r\n        {items.map(it => {\r\n          const active = path.startsWith(it.href);\r\n          return (\r\n            <Link\r\n              key={it.href}\r\n              href={it.href}\r\n              className=\"flex flex-col items-center gap-1 text-xs\"\r\n            >\r\n              <div\r\n                className={`h-6 w-6 rounded-xl2 bg-white/10 grid place-items-center ${\r\n                  active ? \"ring-2 ring-white/70\" : \"\"\r\n                }`}\r\n              >\r\n                <img src={it.icon} alt=\"\" className=\"h-4 w-4 opacity-90\" />\r\n              </div>\r\n              <span className=\"opacity-95\">{it.label}</span>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,MAAM,QAAQ;IACZ;QAAE,MAAM;QAAY,OAAO;QAAW,MAAM;IAAkB;IAC9D;QAAE,MAAM;QAAY,OAAO;QAAW,MAAM;IAAkB;IAC9D;QAAE,MAAM;QAAU,OAAO;QAAS,MAAM;IAAmB;IAC3D;QAAE,MAAM;QAAW,OAAO;QAAU,MAAM;IAAkB;CAC7D;AAEc,SAAS;IACtB,MAAM,OAAO,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IACvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,MAAM,GAAG,CAAC,CAAA;gBACT,MAAM,SAAS,KAAK,UAAU,CAAC,GAAG,IAAI;gBACtC,qBACE,8OAAC,4JAAA,CAAA,UAAI;oBAEH,MAAM,GAAG,IAAI;oBACb,WAAU;;sCAEV,8OAAC;4BACC,WAAW,CAAC,wDAAwD,EAClE,SAAS,yBAAyB,IAClC;sCAEF,cAAA,8OAAC;gCAAI,KAAK,GAAG,IAAI;gCAAE,KAAI;gCAAG,WAAU;;;;;;;;;;;sCAEtC,8OAAC;4BAAK,WAAU;sCAAc,GAAG,KAAK;;;;;;;mBAXjC,GAAG,IAAI;;;;;YAclB;;;;;;;;;;;AAIR","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PIV/Desktop/Scripts/SomeWebApp/BlueTongue--/app/tasks/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useMemo, useState } from \"react\";\r\nimport BottomNav from \"@/components/Footer\";\r\nimport Link from \"next/link\";\r\n\r\n/* ---------- Types ---------- */\r\ntype TaskType =\r\n  | \"known-word\"\r\n  | \"pick-translation\"\r\n  | \"select-correct\"\r\n  | \"is-correct\"\r\n  | \"report\";\r\n\r\ntype Base = { id: string; type: TaskType };\r\n\r\ntype KnownWordTask = Base & {\r\n  type: \"known-word\";\r\n  word: string;\r\n  ipa: string;\r\n  pos: string;\r\n  example: string;\r\n  translation: string;\r\n  target: string;\r\n};\r\n\r\ntype PickTask = Base & {\r\n  type: \"pick-translation\";\r\n  prompt: string;\r\n  options: string[];\r\n  correctIndex: number;\r\n};\r\n\r\ntype SelectCorrectTask = Base & {\r\n  type: \"select-correct\";\r\n  prompt: string;\r\n  options: string[]; // 3 штуки\r\n  correctIndex: number;\r\n};\r\n\r\ntype IsCorrectTask = Base & {\r\n  type: \"is-correct\";\r\n  left: string; // слово\r\n  right: string; // перевод\r\n  isTrue: boolean;\r\n};\r\n\r\ntype ReportTask = Base & {\r\n  type: \"report\";\r\n};\r\n\r\ntype Task = KnownWordTask | PickTask | SelectCorrectTask | IsCorrectTask | ReportTask;\r\n\r\n/* ---------- Demo flow ---------- */\r\nconst flow: Task[] = [\r\n  {\r\n    id: \"k1\",\r\n    type: \"known-word\",\r\n    word: \"School\",\r\n    ipa: \"[skuːl]\",\r\n    pos: \"noun\",\r\n    example: \"to be late for school\",\r\n    translation: \"опоздать в школу\",\r\n    target: \"школа\",\r\n  },\r\n  {\r\n    id: \"p1\",\r\n    type: \"pick-translation\",\r\n    prompt: \"новый\",\r\n    options: [\"new\", \"old\", \"fast\", \"blue\", \"news\", \"knew\", \"few\", \"now\"],\r\n    correctIndex: 0,\r\n  },\r\n  {\r\n    id: \"p2\",\r\n    type: \"pick-translation\",\r\n    prompt: \"школа\",\r\n    options: [\"teacher\", \"class\", \"school\", \"book\", \"study\", \"learn\", \"pupil\", \"room\"],\r\n    correctIndex: 2,\r\n  },\r\n  {\r\n    id: \"s1\",\r\n    type: \"select-correct\",\r\n    prompt: \"Morning\",\r\n    options: [\"утро\", \"вечер\", \"ночь\"],\r\n    correctIndex: 0,\r\n  },\r\n  {\r\n    id: \"c1\",\r\n    type: \"is-correct\",\r\n    left: \"sprosty\",\r\n    right: \"rude, vulgar\",\r\n    isTrue: true,\r\n  },\r\n  {\r\n    id: \"c2\",\r\n    type: \"is-correct\",\r\n    left: \"sprosty\",\r\n    right: \"hruby, rude, vulgar, coarse, crude\",\r\n    isTrue: true,\r\n  },\r\n  {\r\n    id: \"c3\",\r\n    type: \"is-correct\",\r\n    left: \"sprosty\",\r\n    right: \"hruby, rude, vulgar, coarse, crude\",\r\n    isTrue: false,\r\n  },\r\n  { id: \"r1\", type: \"report\" },\r\n];\r\n\r\n/* ---------- Page ---------- */\r\nexport default function TasksPage() {\r\n  const [idx, setIdx] = useState(0);\r\n  const [selected, setSelected] = useState<number | null>(null);\r\n  const [checked, setChecked] = useState<null | \"right\" | \"wrong\">(null);\r\n  const [rightCount, setRight] = useState(0);\r\n  const [wrongCount, setWrong] = useState(0);\r\n\r\n  const task = flow[idx];\r\n  const progress = useMemo(\r\n    () => Math.round((idx / Math.max(flow.length - 1, 1)) * 100),\r\n    [idx]\r\n  );\r\n\r\n  function next(step = 1) {\r\n    setSelected(null);\r\n    setChecked(null);\r\n    setIdx(i => Math.min(i + step, flow.length - 1));\r\n  }\r\n\r\n  function mark(correct: boolean) {\r\n    setChecked(correct ? \"right\" : \"wrong\");\r\n    if (correct) setRight(v => v + 1);\r\n    else setWrong(v => v + 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-dvh pb-24\">\r\n      {/* header */}\r\n      {task.type !== \"report\" && (\r\n        <header className=\"sticky top-0 bg-white\">\r\n          <div className=\"mx-auto max-w-md px-4 pt-3 pb-2\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <Link href=\"/\" className=\"text-brand-600 text-xl\">&times;</Link>\r\n              <ProgressBar value={Math.max(10, progress)} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n      )}\r\n\r\n      <main className=\"mx-auto max-w-md px-4 pt-4\">\r\n        {task.type === \"known-word\" && <KnownWord t={task} onNext={() => next()} />}\r\n\r\n        {task.type === \"pick-translation\" && (\r\n          <PickTranslation\r\n            t={task}\r\n            selected={selected}\r\n            checked={checked}\r\n            onSelect={(i) => {\r\n              setSelected(i);\r\n              const ok = i === task.correctIndex;\r\n              mark(ok);\r\n            }}\r\n            onNext={() => next()}\r\n          />\r\n        )}\r\n\r\n        {task.type === \"select-correct\" && (\r\n          <SelectCorrect\r\n            t={task}\r\n            selected={selected}\r\n            checked={checked}\r\n            onSelect={(i) => {\r\n              setSelected(i);\r\n              const ok = i === task.correctIndex;\r\n              mark(ok);\r\n            }}\r\n            onNext={() => next()}\r\n          />\r\n        )}\r\n\r\n        {task.type === \"is-correct\" && (\r\n          <IsCorrect\r\n            t={task}\r\n            checked={checked}\r\n            onAnswer={(answerIsTrue) => {\r\n              const ok = answerIsTrue === task.isTrue;\r\n              mark(ok);\r\n            }}\r\n            onNext={() => next()}\r\n          />\r\n        )}\r\n\r\n        {task.type === \"report\" && (\r\n          <Report\r\n            right={rightCount}\r\n            wrong={wrongCount}\r\n            learned={rightCount} // заглушка: считаем выученными все верные\r\n            onBack={() => (window.location.href = \"/tutor\")}\r\n          />\r\n        )}\r\n      </main>\r\n\r\n      <BottomNav />\r\n    </div>\r\n  );\r\n}\r\n\r\n/* ---------- UI atoms ---------- */\r\nfunction Card({ children, className = \"\" }: { children: React.ReactNode; className?: string }) {\r\n  return <div className={`rounded-xl2 bg-white shadow-soft px-5 py-5 ${className}`}>{children}</div>;\r\n}\r\n\r\nfunction Button({\r\n  children,\r\n  onClick,\r\n  kind = \"primary\",\r\n  className = \"\",\r\n}: {\r\n  children: React.ReactNode;\r\n  onClick?: () => void;\r\n  kind?: \"primary\" | \"ghost\" | \"success\" | \"danger\";\r\n  className?: string;\r\n}) {\r\n  const map = {\r\n    primary: \"bg-brand-500 text-white\",\r\n    ghost: \"bg-black/10 text-black/70\",\r\n    success: \"bg-emerald-500 text-white\",\r\n    danger: \"bg-red-500 text-white\",\r\n  } as const;\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`rounded-xl2 font-medium py-3 px-4 shadow-btn active:translate-y-px ${map[kind]} ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction ProgressBar({ value }: { value: number }) {\r\n  return (\r\n    <div className=\"flex-1 h-2 rounded-full bg-black/10 overflow-hidden\">\r\n      <div className=\"h-full bg-emerald-400 transition-all\" style={{ width: `${value}%` }} />\r\n    </div>\r\n  );\r\n}\r\n\r\n/* ---------- Variations ---------- */\r\nfunction KnownWord({ t, onNext }: { t: KnownWordTask; onNext: () => void }) {\r\n  return (\r\n    <section className=\"pb-6\">\r\n      <h1 className=\"text-lg font-semibold mb-3\">Which words do you already know?</h1>\r\n      <p className=\"text-xs text-black/50 mb-4\">\r\n        Words marked as known will be excluded from exercises\r\n      </p>\r\n\r\n      <Card className=\"mb-4\">\r\n        <div className=\"text-center\">\r\n          <div className=\"font-semibold\">{t.word}</div>\r\n          <div className=\"text-sm text-brand-600 mt-1\">{t.ipa}</div>\r\n          <div className=\"text-xs text-emerald-600 font-semibold mt-1\">{t.pos}</div>\r\n          <div className=\"text-xs text-black/60 mt-2\">\r\n            {t.example} – {t.translation}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      <Card className=\"mb-6\">\r\n        <div className=\"text-center text-lg text-black/80 py-6\">{t.target}</div>\r\n      </Card>\r\n\r\n      <div className=\"flex gap-3\">\r\n        <Button kind=\"success\" className=\"flex-1\" onClick={onNext}>I know this word</Button>\r\n        <Button className=\"flex-1\" onClick={onNext}>Next Word</Button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction PickTranslation({\r\n  t, selected, checked, onSelect, onNext,\r\n}: {\r\n  t: PickTask;\r\n  selected: number | null;\r\n  checked: null | \"right\" | \"wrong\";\r\n  onSelect: (i: number) => void;\r\n  onNext: () => void;\r\n}) {\r\n  return (\r\n    <section className=\"pb-10\">\r\n      <h2 className=\"text-xl font-semibold mb-5\">Pick the Right Translation</h2>\r\n\r\n      <div className=\"grid grid-cols-2 gap-3\">\r\n        {t.options.map((opt, i) => {\r\n          const isSel = selected === i;\r\n          const ring =\r\n            checked === \"right\" && isSel\r\n              ? \"ring-2 ring-emerald-500\"\r\n              : checked === \"wrong\" && isSel\r\n              ? \"ring-2 ring-red-500\"\r\n              : isSel\r\n              ? \"ring-2 ring-brand-500\"\r\n              : \"\";\r\n          return (\r\n            <button\r\n              key={i}\r\n              onClick={() => onSelect(i)}\r\n              className={`rounded-xl2 bg-white shadow-soft py-3 text-center text-sm ${ring}`}\r\n            >\r\n              {opt}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"mt-6 flex gap-3\">\r\n        <Button className=\"flex-1\" onClick={onNext}>Next</Button>\r\n        <Button kind=\"ghost\" className=\"flex-1\" onClick={onNext}>Skip exercise</Button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction SelectCorrect({\r\n  t, selected, checked, onSelect, onNext,\r\n}: {\r\n  t: SelectCorrectTask;\r\n  selected: number | null;\r\n  checked: null | \"right\" | \"wrong\";\r\n  onSelect: (i: number) => void;\r\n  onNext: () => void;\r\n}) {\r\n  return (\r\n    <section className=\"pb-10\">\r\n      <div className=\"text-sm text-black/60 mb-2\">\r\n        Select the correct translation from the options below\r\n      </div>\r\n      <h2 className=\"text-2xl font-semibold mb-4\">{t.prompt}</h2>\r\n\r\n      <div className=\"grid grid-cols-1 gap-3\">\r\n        {t.options.map((opt, i) => {\r\n          const isSel = selected === i;\r\n          const isCorrect = i === t.correctIndex;\r\n          const ring =\r\n            checked && isSel\r\n              ? checked === \"right\"\r\n                ? \"ring-2 ring-emerald-500\"\r\n                : \"ring-2 ring-red-500\"\r\n              : isSel\r\n              ? \"ring-2 ring-brand-500\"\r\n              : \"\";\r\n          const bg = checked && isSel && checked === \"wrong\" ? \"bg-red-50\" : \"bg-white\";\r\n          return (\r\n            <button\r\n              key={i}\r\n              onClick={() => onSelect(i)}\r\n              className={`rounded-xl2 ${bg} shadow-soft py-3 text-center text-base ${ring}`}\r\n            >\r\n              {opt}\r\n              {/* Показать правильный вариант после ответа */}\r\n              {checked && !isSel && isCorrect && (\r\n                <span className=\"ml-2 text-xs text-emerald-600\">(correct)</span>\r\n              )}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"mt-6 flex justify-end\">\r\n        <Button onClick={onNext}>Next</Button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction IsCorrect({\r\n  t, checked, onAnswer, onNext,\r\n}: {\r\n  t: IsCorrectTask;\r\n  checked: null | \"right\" | \"wrong\";\r\n  onAnswer: (ans: boolean) => void;\r\n  onNext: () => void;\r\n}) {\r\n  // подсветка карточек как в макете\r\n  const base = \"rounded-xl2 bg-white shadow-soft p-4 text-center text-base\";\r\n  const ok = checked === \"right\" ? \"ring-2 ring-emerald-500\" : \"\";\r\n  const bad = checked === \"wrong\" ? \"ring-2 ring-red-500\" : \"\";\r\n\r\n  return (\r\n    <section className=\"pb-10\">\r\n      <h2 className=\"text-xl font-semibold mb-5\">Is This Translation Correct?</h2>\r\n\r\n      <div className=\"grid grid-cols-1 gap-3 mb-4\">\r\n        <div className={`${base} ${checked ? ok : \"\"}`}>{t.left}</div>\r\n        <div className={`${base} ${checked ? (t.isTrue ? ok : bad) : \"\"}`}>{t.right}</div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-3\">\r\n        <Button kind=\"success\" className=\"flex-1\" onClick={() => onAnswer(true)}>\r\n          Correct\r\n        </Button>\r\n        <Button kind=\"danger\" className=\"flex-1\" onClick={() => onAnswer(false)}>\r\n          Incorrect\r\n        </Button>\r\n      </div>\r\n\r\n      {/* милый мозг — просто заглушка из emoji; можешь заменить на /public/brain.svg */}\r\n      <div className=\"mt-8 grid place-items-center text-6xl\">🧠</div>\r\n\r\n      {checked && (\r\n        <div className=\"mt-4 flex justify-end\">\r\n          <Button onClick={onNext}>Next</Button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Report({\r\n  right, wrong, learned, onBack,\r\n}: {\r\n  right: number;\r\n  wrong: number;\r\n  learned: number;\r\n  onBack: () => void;\r\n}) {\r\n  return (\r\n    <section className=\"pb-20\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Progress Report</h2>\r\n\r\n      <Card className=\"mb-6\">\r\n        <div className=\"space-y-3\">\r\n          <ReportRow label=\"Correct answers\" value={right} badge=\"bg-emerald-500\" />\r\n          <ReportRow label=\"Incorrect answers\" value={wrong} badge=\"bg-red-500\" />\r\n          <ReportRow label=\"Words you’ve learned\" value={learned} badge=\"bg-brand-500\" />\r\n        </div>\r\n      </Card>\r\n\r\n      <div className=\"flex justify-start\">\r\n        <Button onClick={onBack}>← Back to Tutor</Button>\r\n      </div>\r\n\r\n      <div className=\"mt-8 grid place-items-center text-7xl\">🧠</div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction ReportRow({ label, value, badge }: { label: string; value: number; badge: string }) {\r\n  return (\r\n    <div className=\"flex items-center justify-between\">\r\n      <div className=\"text-sm\">{label}</div>\r\n      <div className={`text-white px-3 py-1 rounded-full text-sm ${badge}`}>{value}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}